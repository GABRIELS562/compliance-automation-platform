# ================================================================================
# DOCKERFILE FOR COMPLIANCE MONITOR SERVICE
# ================================================================================
# SRE BEST PRACTICE: Container image optimized for production deployment
# 
# FEATURES IMPLEMENTED:
# - Multi-stage build for minimal image size
# - Security hardening with non-root user
# - Health check integration
# - Proper signal handling for graceful shutdown
# - Configuration management via environment variables
# ================================================================================

FROM python:3.9-slim as builder

# SRE PRACTICE: Install build dependencies in separate stage
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# SRE PRACTICE: Copy requirements first for better layer caching
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# ================================================================================
# PRODUCTION STAGE
# ================================================================================

FROM python:3.9-slim

# SRE SECURITY: Create non-root user
RUN groupadd -r compliance && useradd -r -g compliance compliance

# SRE PRACTICE: Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# SRE PRACTICE: Copy Python packages from builder stage
COPY --from=builder /root/.local /home/compliance/.local

# Make sure scripts are available
ENV PATH=/home/compliance/.local/bin:$PATH

# SRE PRACTICE: Copy application code with proper ownership
COPY --chown=compliance:compliance scripts/ ./scripts/
COPY --chown=compliance:compliance sre/health-checks/health_config.json ./config/
COPY --chown=compliance:compliance sre/health-checks/health_monitor.py ./scripts/

# SRE CONFIGURATION: Environment variables for configuration management
ENV PYTHONPATH=/app/scripts
ENV PROMETHEUS_PORT=8000
ENV HEALTH_CHECK_CONFIG=/app/config/health_config.json
ENV LOG_LEVEL=INFO
ENV ENVIRONMENT=production

# SRE PRACTICE: Use non-root user
USER compliance

# SRE PRACTICE: Expose application port
EXPOSE 8000

# SRE HEALTH CHECK: Container-level health monitoring
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health/liveness || exit 1

# SRE LABELS: Container metadata for observability
LABEL \
    org.opencontainers.image.title="Compliance Monitor" \
    org.opencontainers.image.description="SRE-focused compliance monitoring service" \
    org.opencontainers.image.version="1.0.0" \
    org.opencontainers.image.vendor="DevOps Learning Platform" \
    maintainer="sre-team@example.com"

# SRE PRACTICE: Graceful shutdown support
STOPSIGNAL SIGTERM

# SRE STARTUP: Run compliance metrics service
CMD ["python3", "scripts/compliance-metrics.py"]